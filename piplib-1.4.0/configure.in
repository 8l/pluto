
dnl /**-------------------------------------------------------------------**
dnl  **                              PIPLIB                               **
dnl  **-------------------------------------------------------------------**
dnl  **                           configure.in                            **
dnl  **-------------------------------------------------------------------**
dnl  **                   First version: august 11th  2001                **
dnl  **-------------------------------------------------------------------**/
dnl
dnl Input file for autoconf to build a configuration shellscript.
dnl To build the configure script from the PipLib's top-level directory, use
dnl 	autoconf -I autoconf -o configure autoconf/configure.in
dnl for older versions of autoconf use -l instead
dnl 	autoconf -l autoconf autoconf/configure.in > configure
dnl 	chmod +x configure


AC_PREREQ(2.13)
AC_INIT(source/piplib.c)
AC_CONFIG_AUX_DIR(autoconf)
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE(piplib, 1.4.0)
AC_SUBST(versioninfo)
versioninfo=3:0:1

TO_BUILD_32="32"
TO_BUILD_64="64"
TO_BUILD_MP="MP"

dnl /**************************************************************************
dnl  *                              Checking                                  *
dnl  **************************************************************************/


if test "x$prefix" != "xNONE"; then
    prefix_wd=`cd $prefix && pwd`
    srcdir_wd=`cd $srcdir && pwd`
    wd=`pwd`
    if test "x$prefix_wd" = "x$srcdir_wd"; then
	AC_MSG_ERROR(Installation in source directory not supported)
    fi
    if test "x$prefix_wd" = "x$wd"; then
	AC_MSG_ERROR(Installation in build directory not supported)
    fi
fi

dnl Checks for programs.
AC_PROG_CC
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_CHECK_PROG(CD, cd)
dnl Configure needs an empty install.sh file with this, i HATE that...
AC_PROG_INSTALL
AC_CANONICAL_HOST
AC_PROG_LIBTOOL
AC_CHECK_PROG(TEXI2DVI, texi2dvi, texi2dvi, [])
AM_CONDITIONAL(HAVE_TEXI2DVI, test -n "$TEXI2DVI")

AX_CC_MAXOPT

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T


dnl Checks for libraries.
dnl Replace `main' with a function in -lc:
dnl AC_CHECK_LIB(c, main)


dnl Checks for header files.
AC_HEADER_STDC


dnl Checks sizeof the two supported cases.
AC_CHECK_SIZEOF(int,1)
AC_CHECK_SIZEOF(long long int,1)


dnl /**************************************************************************
dnl  *                             Option setting                             *
dnl  **************************************************************************/


dnl The different packages that can be built and installed.
PIP="pip"
INT_BITS=`expr $ac_cv_sizeof_int \* 8`
eval DFLAGS$INT_BITS=-DLINEAR_VALUE_IS_INT
LONG_BITS=`expr $ac_cv_sizeof_long_long_int \* 8`
eval DFLAGS$LONG_BITS=-DLINEAR_VALUE_IS_LONGLONG
MP_BITS="MP"
MP_DFLAGS=-DLINEAR_VALUE_IS_MP
NEED_MP="no"
GMP_INC="/usr/local/include"
GMP_LIB="/usr/local/lib"


dnl Some default values cause I'm not sure whether autoconf set them, while
dnl documentation says it does...
gmp_package="yes"
gmp_include_package="yes"
gmp_library_package="yes"


dnl Options.
dnl --with-pip=yes, --with-pip=no or --without-pip
AC_ARG_WITH(pip,
	[  --without-pip           disable the compilation of pip],
	[ echo "Package pip : $withval" &&
	  if test "$withval"="no" ; then 	
		PIP=""
	  fi ])

AC_ARG_WITH(gmp,
        [  --with-gmp=DIR          DIR where the gmp package is installed],
	[ echo "Package gmp : $withval" &&
	  gmp_package=$withval &&
          GMP_INC=$gmp_package/include &&
          GMP_LIB=$gmp_package/lib &&
          NEED_MP="yes"])

AC_ARG_WITH(gmp_include,
        [  --with-gmp-include=DIR  DIR where gmp.h is installed],
	[ echo "Package gmp-include : $withval" &&
	  gmp_include_package=$withval &&
          GMP_INC=$gmp_include_package &&
	  NEED_MP="yes"])

AC_ARG_WITH(gmp_library,
        [  --with-gmp-library=DIR  DIR where the gmp library is installed],
	[ echo "Package gmp-library : $withval" &&
	  gmp_library_package=$withval &&
          GMP_LIB=$gmp_library_package &&
	  NEED_MP="yes"])

AC_ARG_ENABLE(int-version,
	[  --enable-int-version    Only 'int' version is built],
	[ echo "Package int : $enableval" &&
	  TO_BUILD_32="32" &&
          TO_BUILD_64="" &&
          TO_BUILD_MP=""])

AC_ARG_ENABLE(llint-version,
	[  --enable-llint-version  Only 'long long int' version is built],
	[ echo "Package long long int : $enableval" &&
	  TO_BUILD_32="" &&
          TO_BUILD_64="64" &&
          TO_BUILD_MP=""])

AC_ARG_ENABLE(mp-version,
	[  --enable-mp-version     Only 'MP' version is built],
	[ echo "Package mp : $enableval" &&
	  TO_BUILD_32="" &&
          TO_BUILD_64="" &&
          TO_BUILD_MP="MP" &&
          NEED_MP="yes"])


dnl /**************************************************************************
dnl  *                            Where is GMP?                               *
dnl  **************************************************************************/


dnl Checking for gmp
AC_MSG_CHECKING(whether gmp works)
if test "$gmp_package" = "no"; then
  echo "GMP package not defined"
  AC_MSG_RESULT(no)
  TO_BUILD_MP=""
else
  if test "$NEED_MP" = "no"; then
    echo "Mode normal GMP"
    AC_CHECK_HEADER(gmp.h,
                    [AC_CHECK_LIB(gmp,
		                  __gmpz_init,
		                  [EXTRA_LIBS="$EXTRA_LIBS -lgmp"],
				  [echo "Can't find gmp library." &&
				   echo "MP version will not be builded." &&
				   TO_BUILD_MP=""])],
		    [echo "Can't find gmp headers." &&
		     echo "MP version will not be builded." &&
		     TO_BUILD_MP=""])
  else
    dnl Default given by --with-X is "yes", --without-X is "no".
    if test "$gmp_package" != "yes" ; then
      echo "(GMP path has been set by user)"
      GMP_DIR=$gmp_package
      GMP_LIB=$GMP_DIR/lib
      GMP_INC=$GMP_DIR/include
      EXTRA_LIBS="$EXTRA_LIBS -L$GMP_LIB"
      dnl Useful for AC_CHECK_X to find what we want.
      CPPFLAGS="-I$GMP_DIR/include $CPPFLAGS"
      LDFLAGS="-L$GMP_DIR/lib $LDFLAGS"
    fi
    
    if test "$gmp_include_package" != "yes" ; then
      CPPFLAGS="-I$GMP_DIR/include $CPPFLAGS"
    fi
    
    if test "$gmp_library_package" != "yes" ; then
      EXTRA_LIBS="$EXTRA_LIBS -L$GMP_LIB"
      LDFLAGS="-L$GMP_DIR/lib $LDFLAGS"
    fi
     
    AC_CHECK_HEADER(gmp.h,
                    [],
                    [AC_MSG_ERROR(Can't find gmp headers.)])
    AC_CHECK_LIB(gmp,
                 __gmpz_init,
                 [EXTRA_LIBS="$EXTRA_LIBS -lgmp"],
                 [AC_MSG_ERROR(Can't find gmp library.)])
    
    AC_MSG_RESULT(yes)
  fi
fi


dnl /**************************************************************************
dnl  *                       Packages to actually build                       *
dnl  **************************************************************************/


TO_BUILD="$TO_BUILD_32 $TO_BUILD_64 $TO_BUILD_MP"
for tb in $TO_BUILD; do
    piplibs="$piplibs libpiplib$tb.la"
    if test "x$PIP" != "x"; then
	pips="$pips pip$tb\$(EXEEXT)"
    fi
    examples="$examples example$tb\$(EXEEXT)"
done

AC_SUBST(GIT_INDEX)
if test -f $srcdir/.git/HEAD; then
    GIT_INDEX="$srcdir/.git/index"
fi

dnl /**************************************************************************
dnl  *                            Substitutions                               *
dnl  **************************************************************************/


dnl Substitutions to do in Makefile.in.
AC_SUBST(examples)
AC_SUBST(piplibs)
AC_SUBST(pips)
AC_SUBST(EXTRA_LIBS)

dnl compilation flags
AC_SUBST(DFLAGS32)
AC_SUBST(DFLAGS64)
AC_SUBST(MP_DFLAGS)

AC_CONFIG_FILES(Makefile example/Makefile test/Makefile doc/Makefile)
AC_CONFIG_FILES([genversion.sh], [chmod +x genversion.sh])
AC_CONFIG_COMMANDS([version.h],
    [echo '#define PIPLIB_HEAD "'`./genversion.sh`'"' > version.h])
AC_OUTPUT


echo "             /*-----------------------------------------------*"
echo "              *         PIP/PipLib configuration is OK        *"
echo "              *-----------------------------------------------*/"
echo "It appears that your system is OK to start PIP/PipLib compilation. You"
echo "need now to type \"make uninstall\" if your are upgrading an old version."
echo "Next, type \"make\" to build the program. Lastly type \"make install\" to"
echo "install it on your system (log as root if necessary)."
