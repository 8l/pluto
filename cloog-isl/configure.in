
dnl /**-------------------------------------------------------------------**
dnl  **                              CLooG                                **
dnl  **-------------------------------------------------------------------**
dnl  **                           configure.in                            **
dnl  **-------------------------------------------------------------------**
dnl  **                   First version: august 7th 2002                  **
dnl  **-------------------------------------------------------------------**/
dnl
dnl Input file for autoconf to build a configuration shellscript.
dnl To build the configure script from the CLooG's top-level directory, use
dnl autoconf -l autoconf autoconf/configure.in > configure
dnl if it doesn't work (invalid option -l) try -I instead
dnl autoconf -I autoconf autoconf/configure.in > configure

dnl /**************************************************************************
dnl *               CLooG : the Chunky Loop Generator (experimental)          *
dnl ***************************************************************************
dnl *                                                                         *
dnl * Copyright (C) 2001 Cedric Bastoul                                       *
dnl *                                                                         *
dnl * This library is free software; you can redistribute it and/or           *
dnl * modify it under the terms of the GNU Lesser General Public              *
dnl * License as published by the Free Software Foundation; either            *
dnl * version 2.1 of the License, or (at your option) any later version.      *
dnl *                                                                         *
dnl * This library is distributed in the hope that it will be useful,         *
dnl * but WITHOUT ANY WARRANTY; without even the implied warranty of          *
dnl * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU       *
dnl * Lesser General Public License for more details.                         *
dnl *                                                                         *
dnl * You should have received a copy of the GNU Lesser General Public        *
dnl * License along with this library; if not, write to the Free Software     *
dnl * Foundation, Inc., 51 Franklin Street, Fifth Floor,                      *
dnl * Boston, MA  02110-1301  USA                                             *
dnl *                                                                         *
dnl * CLooG, the Chunky Loop Generator                                        *
dnl * Written by Cedric Bastoul, Cedric.Bastoul@inria.fr                      *
dnl *                                                                         *
dnl ***************************************************************************/

AC_PREREQ(2.13)
AC_INIT(source/cloog.c)
AC_CONFIG_AUX_DIR(autoconf)
AC_CONFIG_MACRO_DIR([m4])
AM_INIT_AUTOMAKE(cloog, 0.14.0)
dnl default version
BITS="64"

dnl /**************************************************************************
dnl  *                              Checking                                  *
dnl  **************************************************************************/

dnl Checks for programs.
AC_PROG_CC
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_CHECK_PROG(CD, cd)
dnl Configure needs an empty install.sh file with this, i HATE that...
AC_PROG_INSTALL
AC_PROG_LIBTOOL
AC_CHECK_PROG(TEXI2DVI, texi2dvi, texi2dvi, [])
AM_CONDITIONAL(HAVE_TEXI2DVI, test -n "$TEXI2DVI")

CFLAGS="-fomit-frame-pointer"

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T



dnl Checks for header files.
AC_HEADER_STDC


dnl Checks for library functions.
AC_CHECK_FUNCS(strtol)


dnl /**************************************************************************
dnl  *                             Option setting                             *
dnl  **************************************************************************/

MP_BITS="MP"
MP_DFLAGS=-DLINEAR_VALUE_IS_MP

AC_CHECK_HEADERS([sys/resource.h],
	[AC_DEFINE([CLOOG_RUSAGE], [], [Print time required to generate code])])

AC_ARG_WITH(bits,
	    [AS_HELP_STRING([--with-bits=32|64|gmp],
			    [integer type to use])],
	    [ BITS=$withval ])

AX_SUBMODULE(isl,no|system|build|bundled,bundled)
if test "$with_isl" != "no"; then
	BITS="gmp"
fi

dnl /**************************************************************************
dnl  *                            Where is GMP?                               *
dnl  **************************************************************************/

gmp_module_default=no
if test "$BITS" = "gmp"; then
	gmp_module_default=system
fi
AX_SUBMODULE(gmp,no|system,$gmp_module_default)

need_get_memory_functions=false
case "$with_gmp" in
system)
    if test "x$with_gmp_prefix" != "x"; then
	CPPFLAGS="-I$with_gmp_prefix/include $CPPFLAGS"
    fi
    
    if test "$with_gmp_exec_prefix" != "yes" ; then
	LDFLAGS="-L$with_gmp_exec_prefix/lib $LDFLAGS"
    fi
     
    AC_CHECK_HEADER(gmp.h,
                    [],
                    [AC_MSG_ERROR(Can't find gmp headers.)])
    AC_CHECK_LIB(gmp,
                 __gmpz_init,
                 [LIBS="$LIBS -lgmp"],
                 [AC_MSG_ERROR(Can't find gmp library.)])
    AC_CHECK_DECLS(mp_get_memory_functions,[],[
	    need_get_memory_functions=true
    ],[#include <gmp.h>])
    ;;
esac
AM_CONDITIONAL(NEED_GET_MEMORY_FUNCTIONS,
		test x$need_get_memory_functions = xtrue)

# all compiled libraries
CLOOG_LIBRARIES=""
AC_SUBST(CLOOG_LIBRARIES)
# backend used by executables
BACKEND=""
AC_SUBST(BACKEND)

dnl /**************************************************************************
dnl  *                          Where is PolyLib?                             *
dnl  **************************************************************************/

AX_SUBMODULE(polylib,no|system|build,system)

polylibs="64 32"
case "$BITS" in
    32|64|gmp)
	polylibs=$BITS
    ;;
esac

dnl Checking for PolyLib
AC_SUBST(cl_cv_polylib)
AC_SUBST(POLYLIB_CPPFLAGS)
AC_SUBST(POLYLIB_LDFLAGS)
AC_SUBST(POLYLIB_LIBS)

AC_MSG_CHECKING(for location of PolyLib)
if test "x$with_polylib_builddir" != "x"; then
	with_polylib_builddir=`cd $with_polylib_builddir; pwd`
	AC_MSG_RESULT(built in $with_polylib_builddir)
	polylib_polylibs=`echo @polylibs@ | $with_polylib_builddir/config.status --file=-`
	AC_MSG_NOTICE(Configured polylibs: $polylib_polylibs)
	POLYLIB_CPPFLAGS="-I$with_polylib_builddir/include -I$polylib_srcdir/include"
	for BITS in $polylibs; do
		cl_cv_polylib=missing
		for PL in $polylib_polylibs; do
			if test "libpolylib$BITS.la" = $PL; then
				cl_cv_polylib="polylib$BITS"
				break;
			fi
		done
		if test "$cl_cv_polylib" != "missing"; then
			POLYLIB_LIBS="$with_polylib_builddir/lib$cl_cv_polylib.la"
			break;
		fi
	done
elif test "$with_polylib" != "no"; then
	if test "x$with_polylib_prefix" != "x"; then
		with_polylib_prefix=`cd $with_polylib_prefix; pwd`
		AC_MSG_RESULT(installed in $with_polylib_exec_prefix)
		POLYLIB_CPPFLAGS="-I$with_polylib_prefix/include"
		POLYLIB_LDFLAGS="-L$with_polylib_exec_prefix/lib"
		LD_LIBRARY_PATH="$with_polylib_exec_prefix/lib:$LD_LIBRARY_PATH"
		export LD_LIBRARY_PATH
	else
		AC_MSG_RESULT(installed in standard location)
	fi
	SAVE_CPPFLAGS="$CPPFLAGS"
	SAVE_LDFLAGS="$LDFLAGS"
	CPPFLAGS="$POLYLIB_CPPFLAGS $CPPFLAGS"
	LDFLAGS="$POLYLIB_LDFLAGS $LDFLAGS"
	for BITS in $polylibs; do
		cl_cv_polylib="polylib$BITS"
		AC_CHECK_HEADER(polylib/$cl_cv_polylib.h,[
			AC_CHECK_LIB($cl_cv_polylib,PolyhedronTSort,[
				POLYLIB_LIBS="-l$cl_cv_polylib"
				break
			])
		])
		cl_cv_polylib=missing
	done
	CPPFLAGS="$SAVE_CPPFLAGS"
	LDFLAGS="$SAVE_LDFLAGS"
fi
case "$cl_cv_polylib" in
missing)
	AC_MSG_WARN(Can't find PolyLib.)
	;;
polylib*)
	CLOOG_LIBRARIES="$CLOOG_LIBRARIES libcloog-polylib.la"
	BACKEND="polylib"
	;;
esac

dnl /**************************************************************************
dnl  *                          Where is isl?                                 *
dnl  **************************************************************************/

AC_SUBST(ISL_CPPFLAGS)
AC_SUBST(ISL_LDFLAGS)
AC_SUBST(ISL_LIBS)
case "$with_isl" in
bundled)
	ISL_CPPFLAGS="-I$srcdir/isl/include -Iisl/include"
	;;
build)
	ISL_CPPFLAGS="-I$isl_srcdir/include -I$with_isl_builddir/include"
	ISL_LIBS="$with_isl_builddir/libisl.la"
	;;
system)
	if test "x$with_isl_prefix" != "x"; then
		ISL_CPPFLAGS="-I$with_isl_prefix/include"
	fi
	if test "x$with_isl_exec_prefix" != "x"; then
		ISL_LDFLAGS="-L$with_isl_exec_prefix/lib"
	fi
	ISL_LIBS="-lisl"
esac
if test "$with_isl" != "no"; then
	CLOOG_LIBRARIES="$CLOOG_LIBRARIES libcloog-isl.la"
	BACKEND="isl"
fi
AM_CONDITIONAL(BUNDLED_ISL, test $with_isl = bundled)

if test -z "$BACKEND"; then
	AC_MSG_ERROR(No backend specified or found.)
fi


case "$BITS" in
	gmp)
		cl_cv_int_type=gmp
		;;
	32|64)
		AC_CHECK_SIZEOF(int,1)
		AC_CHECK_SIZEOF(long,1)
		AC_CHECK_SIZEOF(long long,1)
		for cl_cv_int_type in int long long_long; do
			eval "bits=\`expr \$ac_cv_sizeof_$cl_cv_int_type \* 8\`"
			if test "$bits" = "$BITS"; then
				break
			fi
		done
		;;
esac
AC_DEFINE_UNQUOTED(AS_TR_CPP(CLOOG_INT_$cl_cv_int_type))

AC_SUBST(GIT_INDEX)
if test -f $srcdir/.git/HEAD; then
	GIT_INDEX="\$(top_srcdir)/.git/index"
fi


dnl /**************************************************************************
dnl  *                            Substitutions                               *
dnl  **************************************************************************/


dnl Substitutions to do in Makefile.in.
AC_SUBST(target)
AC_SUBST(CC)
AC_SUBST(LN_S)
AC_SUBST(SHEXT)

AC_SUBST(prefix)
AC_SUBST(exec_prefix)
AC_SUBST(INSTALL)

AC_SUBST(BITS)

AC_CONFIG_HEADERS(config.h)
AC_CONFIG_HEADERS(include/cloog/int.h)
AC_CONFIG_HEADERS(include/cloog/options.h)
AC_CONFIG_FILES(Makefile test/Makefile include/cloog/polylib/backend.h)
AC_CONFIG_FILES(autoconf/Doxyfile)
AC_CONFIG_FILES(doc/Makefile)
AC_CONFIG_FILES(source/version.c)
AC_CONFIG_FILES([genversion.sh], [chmod +x genversion.sh])
AC_CONFIG_COMMANDS([version.h],
	[echo '#define CLOOG_HEAD "'`./genversion.sh`'"' > version.h])
AC_CONFIG_COMMANDS([doc/gitversion.texi],
	[echo '@set VERSION '`./genversion.sh`'' > doc/gitversion.texi])
if test $with_isl = bundled; then
	AC_CONFIG_SUBDIRS(isl)
fi
AC_CONFIG_COMMANDS_POST([
	old_args=""
	for arg in $ac_configure_args; do
		case arg in
		--with-polylib*)
			;;
		*)
			old_args="$old_args $arg"
			;;
		esac
	done
	ac_configure_args="$old_args $cloog_configure_args"
])
AC_OUTPUT


echo "             /*-----------------------------------------------*"
echo "              *           CLooG configuration is OK           *"
echo "              *-----------------------------------------------*/"
echo "It appears that your system is OK to start CLooG compilation. You need"
echo "now to type \"make\". After compilation, you should check CLooG by typing"
echo "\"make check\". If no problem occur, you can type \"make uninstall\" if"
echo "you are upgrading an old version. Lastly type \"make install\" to install"
echo "CLooG on your system (log as root if necessary)."
