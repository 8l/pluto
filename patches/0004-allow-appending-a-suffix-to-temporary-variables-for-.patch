From 974a0aef9ab32486cfab019a47a7f1c177f331ac Mon Sep 17 00:00:00 2001
From: Uday Bondhugula <uday@csa.iisc.ernet.in>
Date: Tue, 1 Sep 2015 11:09:47 +0530
Subject: [PATCH 4/4] allow appending a suffix to temporary variables for
 multiple scop support

Signed-off-by: Uday Bondhugula <uday@csa.iisc.ernet.in>
---
 include/cloog/clast.h |  4 ++++
 source/clast.c        |  2 ++
 source/pprint.c       | 24 ++++++++++++------------
 3 files changed, 18 insertions(+), 12 deletions(-)

diff --git a/include/cloog/clast.h b/include/cloog/clast.h
index f118c1e..9f7b4fb 100644
--- a/include/cloog/clast.h
+++ b/include/cloog/clast.h
@@ -113,6 +113,10 @@ struct clast_for {
     /* Enable execution time reporting for this loop */
     /* Variable name to accumulate execution time this loop */
     char *time_var_name;
+    /* Suffix to append to lbp, ubp, lbv, ubv when the loop is being
+     * vectorized/parallelized; needed when dealing with multiple SCoPs per
+     * file */
+    char *suffix;
 };
 
 struct clast_equation {
diff --git a/source/clast.c b/source/clast.c
index 0e86d3c..efbcc0c 100644
--- a/source/clast.c
+++ b/source/clast.c
@@ -214,6 +214,7 @@ static void free_clast_for(struct clast_stmt *s)
     if (f->private_vars) free(f->private_vars);
     if (f->reduction_vars) free(f->reduction_vars);
     if (f->time_var_name) free(f->time_var_name);
+    free(f->suffix);
     free(f);
 }
 
@@ -234,6 +235,7 @@ struct clast_for *new_clast_for(CloogDomain *domain, const char *it,
     f->private_vars = NULL;
     f->reduction_vars = NULL;
     f->time_var_name = NULL;
+    f->suffix = NULL;
     cloog_int_init(f->stride);
     if (stride)
 	cloog_int_set(f->stride, stride->stride);
diff --git a/source/pprint.c b/source/pprint.c
index 6339297..48c3c70 100644
--- a/source/pprint.c
+++ b/source/pprint.c
@@ -475,13 +475,13 @@ void pprint_for(struct cloogoptions *options, FILE *dst, int indent,
         }
         if ((f->parallel & CLAST_PARALLEL_OMP) && !(f->parallel & CLAST_PARALLEL_MPI)) {
             if (f->LB) {
-                fprintf(dst, "lbp=");
+                fprintf(dst, "lbp%s=", f->suffix);
                 pprint_expr(options, dst, f->LB);
                 fprintf(dst, ";\n");
             }
             if (f->UB) {
                 fprintf(dst, "%*s", indent, "");
-                fprintf(dst, "ubp=");
+                fprintf(dst, "ubp%s=", f->suffix);
                 pprint_expr(options, dst, f->UB);
                 fprintf(dst, ";\n");
             }
@@ -497,13 +497,13 @@ void pprint_for(struct cloogoptions *options, FILE *dst, int indent,
         if ((f->parallel & CLAST_PARALLEL_VEC) && !(f->parallel & CLAST_PARALLEL_OMP)
                && !(f->parallel & CLAST_PARALLEL_MPI)) {
             if (f->LB) {
-                fprintf(dst, "lbv=");
+                fprintf(dst, "lbv%s=", f->suffix);
                 pprint_expr(options, dst, f->LB);
                 fprintf(dst, ";\n");
             }
             if (f->UB) {
                 fprintf(dst, "%*s", indent, "");
-                fprintf(dst, "ubv=");
+                fprintf(dst, "ubv%s=", f->suffix);
                 pprint_expr(options, dst, f->UB);
                 fprintf(dst, ";\n");
             }
@@ -542,13 +542,13 @@ void pprint_for(struct cloogoptions *options, FILE *dst, int indent,
         }
         if (f->parallel & CLAST_PARALLEL_MPI) {
             if (f->LB) {
-                fprintf(dst, "_lb_dist=");
+                fprintf(dst, "_lb_dist%s=", f->suffix);
                 pprint_expr(options, dst, f->LB);
                 fprintf(dst, ";\n");
             }
             if (f->UB) {
                 fprintf(dst, "%*s", indent, "");
-                fprintf(dst, "_ub_dist=");
+                fprintf(dst, "_ub_dist%s=", f->suffix);
                 pprint_expr(options, dst, f->UB);
                 fprintf(dst, ";\n");
             }
@@ -585,11 +585,11 @@ void pprint_for(struct cloogoptions *options, FILE *dst, int indent,
     if (f->LB) {
         fprintf(dst, "%s=", f->iterator);
         if (f->parallel & CLAST_PARALLEL_MPI) {
-            fprintf(dst, "lbd_%s", f->iterator);
+            fprintf(dst, "lbd_%s%s", f->iterator, f->suffix);
         }else if (f->parallel & CLAST_PARALLEL_OMP) {
-            fprintf(dst, "lbp");
+            fprintf(dst, "lbp%s", f->suffix);
         }else if (f->parallel & CLAST_PARALLEL_VEC){
-            fprintf(dst, "lbv");
+            fprintf(dst, "lbv%s", f->suffix);
         }else{
             pprint_expr(options, dst, f->LB);
         }
@@ -606,11 +606,11 @@ void pprint_for(struct cloogoptions *options, FILE *dst, int indent,
             fprintf(dst,"%s<=", f->iterator);
 
         if (f->parallel & CLAST_PARALLEL_MPI) {
-            fprintf(dst, "ubd_%s", f->iterator);
+            fprintf(dst, "ubd_%s%s", f->iterator, f->suffix);
         }else if (f->parallel & CLAST_PARALLEL_OMP) {
-            fprintf(dst, "ubp");
+            fprintf(dst, "ubp%s", f->suffix);
         }else if (f->parallel & CLAST_PARALLEL_VEC){
-            fprintf(dst, "ubv");
+            fprintf(dst, "ubv%s", f->suffix);
         }else{
             pprint_expr(options, dst, f->UB);
         }
-- 
2.4.3

