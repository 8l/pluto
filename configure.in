dnl
dnl configure.in
dnl 
dnl PLUTO - parallelism and locality transformer (experimental)
dnl 
dnl Copyright (C) 2007-2008 Uday Bondhugula
dnl
dnl This program is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU General Public License
dnl as published by the Free Software Foundation; either version 2
dnl of the License, or (at your option) any later version.
dnl
dnl The complete GNU General Public Licence Notice can be found as the
dnl `COPYING' file in the top-level directory.
dnl

AC_PREREQ(2.13)
AC_INIT(pluto, [0.6.2], [udayreddy@gmail.com])
AM_INIT_AUTOMAKE(pluto,0.6.2)
AM_CONFIG_HEADER(config.h)

dnl clan, polylib, candl, cloog are all configured with 64-bit data type support
dnl NOTE: configuring these 64-bit data type support has nothing to do with arch
dnl being 32-bit/64-bit
CFLAGS="-Wall -funroll-loops -DSCOPLIB_INT_T_IS_LONGLONG -DCLOOG_INT_LONG_LONG"

debug="false"
dnl debugging flag
AC_ARG_ENABLE(debug,
              [  --enable-debug  enable compilation with debugging info ],
              debug="true")

if test $debug = "true"; then
    CFLAGS="$CFLAGS -g -DDEBUG -O3"
else
    CFLAGS="$CFLAGS -O3"
fi

dnl check for programs
AC_CHECK_PROG(CC,gcc,gcc)
AC_PROG_CXX
dnl AC_CHECK_PROG(CXX,g++,g++)
AC_CHECK_PROG(LD,ld,ld)
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_LN_S

dnl check for some compiler characteristics
dnl MC_CHECK_GUIDING_DECLS
AC_SUBST(GUIDING_DECLS)

dnl check for typedefs, structures, compiler features
AC_C_CONST

AC_CHECK_HEADERS(math.h stdlib.h stdio.h assert.h string.h)

dnl set SOURCE_DIR to current directory
SOURCE_DIR=`pwd`
AC_SUBST(SOURCE_DIR)

AC_CHECK_PROG(CP,cp,cp)
AC_CHECK_PROG(RM,rm,rm -f)
AC_CHECK_PROG(MV,mv,mv)
AC_CHECK_PROG(CAT,cat,cat)
AC_CHECK_PROG(AR,ar,ar)
AC_CHECK_PROG(STRIP,strip,strip)
AC_CHECK_PROG(SED,sed,sed)

AC_CHECK_HEADER(gmp.h,
                [AC_CHECK_LIB(gmp,main,
                 [poly_cv_gmpfatal="no"],
                 [poly_cv_gmpfatal="yes"])],
                 [poly_cv_gmpfatal="yes"])

if test "$poly_cv_gmpfatal" = "yes"; then
    AC_MSG_ERROR([GMP not found])
    else
        AC_CHECK_DECLS(mp_get_memory_functions,[],[
                                                AC_LIBOBJ(mp_get_memory_functions)
                                                ],[#include <gmp.h>
                                                   ])
        fi


use_isl="true"
dnl AC_ARG_ENABLE(isl,
dnl [  --enable-isl     Enable isl instead of PolyLib],
dnl use_isl="true")

#if test $use_isl = "true"; then
    #CFLAGS="-DPIP_WIDTH_MP"
#fi

dnl Configuring PipLib (long long int is 64 bits)
echo -e "\n=========================="
echo "Configuring PipLib 1.4.0"
echo "=========================="

#if test $use_isl = "true"; then
    #configureopts="--enable-mp-version --enable-static --disable-shared"
    #LIBS="-lpiplibMP $LIBS"
#else
    configureopts="--with-bits=64 --enable-static --disable-shared"
    LIBS="-lpiplib64 $LIBS"
#fi
(cd piplib-1.4.0/
 $RM config.cache;
 ./configure ${configureopts}
 )
CFLAGS="-I../piplib-1.4.0/include $CFLAGS"
LDFLAGS="-L../piplib-1.4.0/.libs $LDFLAGS"


dnl Configuring PolyLib (long long int is 64 bits)
echo -e "\n=========================="
echo "Configuring Polylib 5.22.5"
echo "=========================="
configureopts="--enable-longlongint-lib --without-libgmp --enable-static --disable-shared"
(cd polylib-5.22.5/
 $RM config.cache;
 ./configure ${configureopts} || exit 1
 )
LIBS="-lpolylib64 $LIBS"
CFLAGS="-I../polylib-5.22.5/include $CFLAGS"
LDFLAGS="-L../polylib-5.22.5/.libs/ $LDFLAGS"


dnl Configuring Clan 0.6.0
echo -e "\n=========================="
echo "Configuring Clan 0.6.0"
echo "=========================="
#if test $use_isl = "true"; then
#configureopts="--enable-mp-version --enable-static --disable-shared"
#else
configureopts="--enable-llint-version --enable-static --disable-shared \
--enable-internal-scoplib"
#fi
(cd clan-0.6.0/
 ./configure ${configureopts}
 )
LIBS="-lclan -lscoplib $LIBS"
CFLAGS="-I../clan-0.6.0/include \
-I../clan-0.6.0/scoplib/scoplib-0.2.0/include $CFLAGS"
LDFLAGS="-L../clan-0.6.0/source/.libs -L../clan-0.6.0/scoplib/scoplib-0.2.0/source/.libs $LDFLAGS"


dnl Configuring Candl 0.4.0 (long long int)
echo -e "\n=========================="
echo "Configuring Candl 0.4.0 "
echo "=========================="
#if test $use_isl = "true"; then
#configureopts="--enable-mp-version --enable-static --disable-shared --with-clan=$SOURCE_DIR/clan-0.6.0 --with-piplib=$SOURCE_DIR/piplib-1.4.0"
#else
configureopts="--enable-llint-version --enable-static --disable-shared \
--with-scoplib=$SOURCE_DIR/clan-0.6.0/scoplib/scoplib-0.2.0 \
--with-piplib=$SOURCE_DIR/piplib-1.4.0"
#--with-clan=$SOURCE_DIR/clan-0.6.0 \
#fi
(cd candl-0.4.0/
 ./configure ${configureopts}
 )
LIBS="-lcandl $LIBS"
CFLAGS="-I../candl-0.4.0/include $CFLAGS"
LDFLAGS="-L../candl-0.4.0/source/.libs $LDFLAGS"


dnl Configuring Cloog 0.14.1 (long long int)
echo -e "\n=========================="
if test $use_isl = "false"; then
echo "Configuring CLooG 0.14.1 (polylib-64)"
echo "=========================="
    configureopts="--with-bits=64 --with-polylib-library=../polylib-5.22.5/.libs --with-polylib-include=../polylib-5.22.5/include --enable-static --disable-shared"
    (cd cloog-0.14.1/
     ./configure ${configureopts}
     )
    LIBS="-lcloog $LIBS"
    CFLAGS="-I../cloog-0.14.1/include $CFLAGS"
    LDFLAGS="-L../cloog-0.14.1/.libs/ $LDFLAGS"
else
echo "Configuring Cloog-isl"
echo "=========================="
    configureopts="--with-isl=bundled --with-polylib=no --with-piplib=no --enable-static --disable-shared"
    (cd cloog-isl/
     ./configure ${configureopts}
     )
    LIBS="-lcloog-isl -lisl -lgmp $LIBS"
    CFLAGS="-I../cloog-isl/include $CFLAGS"
    LDFLAGS="-L../cloog-isl/.libs/ -L../cloog-isl/isl/.libs/ $LDFLAGS"
fi

AC_PATH_PROGS(BASH, bash)

AC_OUTPUT(Makefile \
          src/Makefile \
          polycc.sh
          )

echo " /*-----------------------------------------------*"
echo "  *           PLUTO configuration is OK           *"
echo "  *-----------------------------------------------*/"
echo "Your system is ready to compile PLUTO"
echo "Run 'make' next to compile"
echo "Then, run 'make test' to check if everything is working correctly"
echo -e "Use polycc (see README)\n"
